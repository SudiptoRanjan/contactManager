{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextinputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/about.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","prototypes","PropTypes","object","isRequired","Contacts","Fragment","contacts_Contact","TextinputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","EditContact","updContact","match","params","put","Header","branding","href","about","NotFound","string","Test","title","body","fetch","then","response","json","App","context_Provider","HashRouter","Switch","Route","exact","path","component","About","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6b852d70.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from 'axios'\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n\r\n      case 'UPDATE_CONTACT':\r\n      return{\r\n\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id ? (contact = action.payload):contact\r\n        )\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => {\r\n      this.setState(state => reducer(state, action));\r\n    }\r\n  };\r\n\r\n async componentDidMount(){\r\n\r\n   const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n\r\n   this.setState({contacts: res.data});\r\n    \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport {  Link  } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\nimport axios from \"axios\";\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    try {\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/{id}`);\r\n\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    } catch (e) {\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}\r\n\r\n                <i\r\n                  onClick={() =>\r\n                    this.setState({\r\n                      showContactInfo: !this.state.showContactInfo\r\n                    })\r\n                  }\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                />\r\n\r\n                <Link to ={`contact/edit/${id}`} >\r\n                  <i \r\n                  className=\"fas fa-pencil-alt\"\r\n                  style={{cursor:'pointer',float:'right',color:'black',marginRight:'1rem'}}\r\n                  >\r\n                  </i>\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {email}</li>\r\n                  <li className=\"list-group-item\">Phone: {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.prototypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react'\r\nimport Contact from './Contact'\r\nimport {Consumer} from '../../context'\r\n\r\n class Contacts extends Component {\r\n     \r\n  render() {\r\n  \r\n    return (\r\n      <Consumer>\r\n        {value =>{\r\n          const {contacts}=value;\r\n          return (\r\n            <React.Fragment>\r\n            <h1 className=\"display-4 mb-2\">\r\n            <span className=\"text-danger p-1\">Contact</span>\r\n            List\r\n            </h1>\r\n              {contacts.map(contact => (\r\n                <Contact\r\n                  key={contact.id}\r\n                  contact={contact}\r\n                />\r\n              ))}\r\n            </React.Fragment>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n    \r\n  }\r\n}\r\n\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nexport default function TextinputGroup({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor=\"name\">{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n\r\n      {error && <div className=\"invaid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nTextinputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error:PropTypes.string\r\n};\r\n\r\nTextinputGroup.defaultProps={\r\n  type:'text'\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextinputGroup\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport default class AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors:{\r\n\r\n    }\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone,} = this.state;\r\n\r\n    //Check For Errors \r\n\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n   const res = await axios.post('https://jsonplaceholder.typicode.com/users',newContact);\r\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n    //Clear state\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    //  redirect\r\n\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    const { name, email, phone,errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div>\r\n              <div className=\"card mb-3\">\r\n                <div className=\"card-header\">Add Contact</div>\r\n                <div className=\"card-body\">\r\n                  <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                    <TextInputGroup\r\n                      label=\"Name\"\r\n                      name=\"name\"\r\n                      placeholder=\"Enter Name\"\r\n                      value={name}\r\n                      onChange={this.onChange}\r\n                      error={errors.name}\r\n                    />\r\n\r\n                    <TextInputGroup\r\n                      label=\"Email\"\r\n                      name=\"email\"\r\n                      type=\"email\"\r\n                      placeholder=\"Enter Email\"\r\n                      value={email}\r\n                      onChange={this.onChange}\r\n                      error={errors.email}\r\n                    />\r\n\r\n                    <TextInputGroup\r\n                      label=\"Phone\"\r\n                      name=\"phone\"\r\n                      placeholder=\"Enter Phone\"\r\n                      value={phone}\r\n                      onChange={this.onChange}\r\n                      error={errors.phone}\r\n                    />\r\n\r\n                    <input\r\n                      type=\"submit\"\r\n                      value=\"Add Contact\"\r\n                      className=\"btn btn-light btn-block\"\r\n                    />\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextinputGroup\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport default class EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {\r\n\r\n    }\r\n  };\r\n\r\n  async componentDidMount (){\r\n\r\n    const {id}= this.props.match.params;\r\n\r\n    const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n    const contact =res.data;\r\n\r\n    this.setState({\r\n      name:contact.name,\r\n      email:contact.email,\r\n      phone:contact.phone\r\n    })\r\n\r\n\r\n  }\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone, } = this.state;\r\n\r\n    //Check For Errors \r\n\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    const updContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    }\r\n\r\n    const {id}=this.props.match.params;\r\n\r\n\r\n\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,updContact\r\n    );\r\n\r\n    dispatch({type:'UPDATE_CONTACT',payload:res.data})\r\n\r\n   \r\n    //Clear state\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    //  redirect\r\n\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div>\r\n              <div className=\"card mb-3\">\r\n                <div className=\"card-header\">Edit Contact</div>\r\n                <div className=\"card-body\">\r\n                  <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                    <TextInputGroup\r\n                      label=\"Name\"\r\n                      name=\"name\"\r\n                      placeholder=\"Enter Name\"\r\n                      value={name}\r\n                      onChange={this.onChange}\r\n                      error={errors.name}\r\n                    />\r\n\r\n                    <TextInputGroup\r\n                      label=\"Email\"\r\n                      name=\"email\"\r\n                      type=\"email\"\r\n                      placeholder=\"Enter Email\"\r\n                      value={email}\r\n                      onChange={this.onChange}\r\n                      error={errors.email}\r\n                    />\r\n\r\n                    <TextInputGroup\r\n                      label=\"Phone\"\r\n                      name=\"phone\"\r\n                      placeholder=\"Enter Phone\"\r\n                      value={phone}\r\n                      onChange={this.onChange}\r\n                      error={errors.phone}\r\n                    />\r\n\r\n                    <input\r\n                      type=\"submit\"\r\n                      value=\"Update Contact\"\r\n                      className=\"btn btn-light btn-block\"\r\n                    />\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nexport default function Header(props) {\r\n  const {branding}=props;\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"#\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n               <i className=\"fas fa-home\"></i> Home\r\n              </Link>\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\"></i>Add\r\n              </Link>\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n               <i className=\"fas fa-question\"></i> About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps ={\r\n  branding : 'My App'\r\n};\r\n\r\nHeader.prototypes ={\r\n  branding:PropTypes.string.isRequired\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport default function about() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">404 Page Not Found</h1>\r\n      <p className=\"lead\">Sorry,that page does not exist</p>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\n\r\n class Test extends Component {\r\n\r\n  state={\r\n    title:'',\r\n    body:''\r\n  }\r\n\r\n  componentDidMount(){\r\n    fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        this.setState({\r\n          title:data.title,\r\n          body:data.body\r\n        })\r\n      })\r\n  }\r\n\r\n  // componentWillMount(){\r\n  //   console.log('componentWillMount');\r\n  // }\r\n\r\n  // componentDidUpdate(){\r\n  //   console.log('componentDIdUpdate');\r\n  // }\r\n\r\n  // componentWillUpdate(){\r\n  //   console.log('componentWillUpdate');\r\n  // }\r\n\r\n  // componentWillReceiveProps(nextProps,nextState){\r\n  //   console.log('componentWillReciveProps');\r\n  // }\r\n\r\n  render() {\r\n\r\n    const {title,body}=this.state;\r\n    return (\r\n      <div>\r\n        <h1>{title}</h1>\r\n        <p>{body}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React, { Component } from \"react\";\nimport { HashRouter as Router,Route,Switch } from \"react-router-dom\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport Header from \"./components/layout/Header\";\nimport About from './components/pages/about';\nimport NotFound from './components/pages/NotFound'\nimport Test from './components/test/Test'\nimport { Provider } from \"./context\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n\n            <div className=\"container\">\n              <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/test\" component={Test} />\n              <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}